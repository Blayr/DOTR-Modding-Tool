namespace GameplayPatches {
public class AllowAllCustomDuels : Patch {
    static int TaTutoFocusUnit33 = 0x1446f0;
    static int TaTutoFocusInit34 = 0x145ca0;

    public override bool IsApplied() {
        return dataAccess.CheckIfPatchApplied(0x197328, new byte[8] { 0x7c, 0xd1, 0x05, 0x08, 0x00, 0x00, 0x00, 0x00 });
    }

    public override void Apply() {
        dataAccess.ApplyPatch(0x197328, new byte[8] { 0x7c, 0xd1, 0x05, 0x08, 0x00, 0x00, 0x00, 0x00 });
        dataAccess.ApplyPatch(TaTutoFocusUnit33, new byte[312] { 0x29, 0x00, 0x0d, 0x3c, 0xce, 0x0f, 0x0b, 0x24, 0x0a, 0x00, 0x0a, 0x24, 0x18, 0x58, 0x6a, 0x01, 0x20, 0x68, 0xab, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0xac, 0x81, 0x3e, 0x00, 0x0c, 0x10, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0xac, 0x81, 0x3b, 0x00, 0x0c, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x24, 0x00, 0x00, 0x05, 0x24, 0x04, 0x00, 0x06, 0x24, 0x90, 0x0e, 0x08, 0x0c, 0x00, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x01, 0x3c, 0x88, 0xc0, 0x38, 0x90, 0x0e, 0x00, 0x40, 0x10, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x18, 0x27, 0x02, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x18, 0x24, 0x04, 0x00, 0x02, 0x24, 0x2a, 0x70, 0x58, 0x00, 0x06, 0x00, 0xc0, 0x11, 0x00, 0x00, 0x00, 0x00, 0x39, 0x00, 0x02, 0x24, 0x2a, 0x70, 0x02, 0x03, 0x02, 0x00, 0xc0, 0x11, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x18, 0x24, 0x00, 0x00, 0x04, 0x24, 0x90, 0x0e, 0x08, 0x0c, 0x08, 0x00, 0x06, 0x24, 0x0f, 0x00, 0x40, 0x10, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x18, 0x27, 0x02, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x18, 0x24, 0x04, 0x00, 0x02, 0x24, 0x2a, 0x70, 0x58, 0x00, 0x07, 0x00, 0xc0, 0x11, 0x00, 0x00, 0x00, 0x00, 0x39, 0x00, 0x02, 0x24, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x70, 0x02, 0x03, 0x02, 0x00, 0xc0, 0x11, 0x00, 0x00, 0x00, 0x00, 0x39, 0x00, 0x18, 0x24, 0x4e, 0x00, 0x02, 0x24, 0x1a, 0x00, 0x02, 0x03, 0x10, 0xc0, 0x00, 0x00, 0xaa, 0x00, 0x01, 0x3c, 0x88, 0xc0, 0x38, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x24, 0x90, 0x0e, 0x08, 0x0c, 0x00, 0x00, 0x04, 0x24, 0x05, 0x00, 0x40, 0x10, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x17, 0x07, 0x0c, 0xff, 0xff, 0x04, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x06, 0x24, 0x08, 0x20, 0x00, 0x72, 0x90, 0x0e, 0x08, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x1c, 0x07, 0x08, 0x00, 0x00, 0x00, 0x00 });
        dataAccess.ApplyPatch(0x195eb0, new byte[8] { 0xe8, 0xd6, 0x05, 0x08, 0x00, 0x00, 0x00, 0x00 });
        dataAccess.ApplyPatch(TaTutoFocusInit34, new byte[604] { 0xaa, 0x00, 0x01, 0x3c, 0x88, 0xc0, 0x23, 0x80, 0x39, 0x00, 0x02, 0x24, 0x06, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x1b, 0x00, 0x05, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x12, 0x24, 0x3a, 0x00, 0x02, 0x24, 0x04, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x1c, 0x00, 0x05, 0x24, 0x02, 0x00, 0x12, 0x24, 0x3b, 0x00, 0x02, 0x24, 0x04, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x1d, 0x00, 0x05, 0x24, 0x03, 0x00, 0x12, 0x24, 0x3c, 0x00, 0x02, 0x24, 0x04, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x1e, 0x00, 0x05, 0x24, 0x04, 0x00, 0x12, 0x24, 0x3d, 0x00, 0x02, 0x24, 0x04, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x1f, 0x00, 0x05, 0x24, 0x05, 0x00, 0x12, 0x24, 0x3e, 0x00, 0x02, 0x24, 0x04, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x20, 0x00, 0x05, 0x24, 0x06, 0x00, 0x12, 0x24, 0x3f, 0x00, 0x02, 0x24, 0x04, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x21, 0x00, 0x05, 0x24, 0x07, 0x00, 0x12, 0x24, 0x40, 0x00, 0x02, 0x24, 0x04, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x22, 0x00, 0x05, 0x24, 0x08, 0x00, 0x12, 0x24, 0x41, 0x00, 0x02, 0x24, 0x04, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x23, 0x00, 0x05, 0x24, 0x09, 0x00, 0x12, 0x24, 0x42, 0x00, 0x02, 0x24, 0x04, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x24, 0x00, 0x05, 0x24, 0x0a, 0x00, 0x12, 0x24, 0x43, 0x00, 0x02, 0x24, 0x04, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x25, 0x00, 0x05, 0x24, 0x0b, 0x00, 0x12, 0x24, 0x44, 0x00, 0x02, 0x24, 0x04, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x26, 0x00, 0x05, 0x24, 0x0c, 0x00, 0x12, 0x24, 0x45, 0x00, 0x02, 0x24, 0x04, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x27, 0x00, 0x05, 0x24, 0x0d, 0x00, 0x12, 0x24, 0x46, 0x00, 0x02, 0x24, 0x04, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x28, 0x00, 0x05, 0x24, 0x0e, 0x00, 0x12, 0x24, 0x47, 0x00, 0x02, 0x24, 0x04, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x29, 0x00, 0x05, 0x24, 0x0f, 0x00, 0x12, 0x24, 0x48, 0x00, 0x02, 0x24, 0x04, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x2a, 0x00, 0x05, 0x24, 0x10, 0x00, 0x12, 0x24, 0x49, 0x00, 0x02, 0x24, 0x04, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x2b, 0x00, 0x05, 0x24, 0x11, 0x00, 0x12, 0x24, 0x4a, 0x00, 0x02, 0x24, 0x04, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x2c, 0x00, 0x05, 0x24, 0x12, 0x00, 0x12, 0x24, 0x4b, 0x00, 0x02, 0x24, 0x04, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x2d, 0x00, 0x05, 0x24, 0x13, 0x00, 0x12, 0x24, 0x4c, 0x00, 0x02, 0x24, 0x04, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x2e, 0x00, 0x05, 0x24, 0x14, 0x00, 0x12, 0x24, 0x4d, 0x00, 0x02, 0x24, 0x04, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x64, 0x52, 0x08, 0x0c, 0x2f, 0x00, 0x05, 0x24, 0x15, 0x00, 0x12, 0x24, 0x6e, 0x17, 0x07, 0x08 });
    }

    public override void Remove() {
        dataAccess.ApplyPatch(0x197328, new byte[8] { 0x28, 0x26, 0x00, 0x72, 0x90, 0x0e, 0x08, 0x0c });
        dataAccess.ApplyPatch(0x195eb0, new byte[8] { 0xaa, 0x00, 0x01, 0x3c, 0x88, 0xc0, 0x23, 0x90 });
    }
}
}
