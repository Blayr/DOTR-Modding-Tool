

namespace GameplayPatches
{
    /// <summary>
    /// WORKS
    /// </summary>
    public class AiFixDarkhole : Patch
    {
        static int patchLocation = 0x16b0f0;
        static int bonesPatchLocation = 0x0012b000;

        public override bool IsApplied()
        {
            return dataAccess.CheckIfPatchApplied(patchLocation, new byte[8] { 0xc8, 0xe0, 0x05, 0x08, 0x00, 0x00, 0x00, 0x00 });
        }

        public override void Apply()
        {
            //Fix MFLC Logic
            dataAccess.ApplyPatch(patchLocation, new byte[252] { 0xA0, 0xFF, 0xBD, 0x27, 0x50, 0x00, 0xBF, 0x7F, 0x40, 0x00, 0xB4, 0x7F, 0x30, 0x00, 0xB3, 0x7F, 0x28, 0xA6, 0x80, 0x70, 0x20, 0x00, 0xB2, 0x7F, 0x10, 0x00, 0xB1, 0x7F, 0x03, 0x00, 0x07, 0x24, 0x21, 0x00, 0x08, 0x24, 0x0E, 0x00, 0x09, 0x24, 0x28, 0x26, 0x00, 0x70, 0x28, 0x2E, 0x00, 0x70, 0x28, 0x36, 0x80, 0x72, 0x00, 0x00, 0xB0, 0x7F, 0x90, 0x32, 0x09, 0x0C, 0x28, 0x8E, 0x00, 0x70, 0x28, 0x26, 0x40, 0x70, 0x14, 0x3B, 0x09, 0x0C, 0x28, 0x2E, 0x00, 0x70, 0x03, 0x9A, 0x02, 0x00, 0xFF, 0x00, 0x52, 0x30, 0x28, 0x26, 0x60, 0x72, 0xD8, 0x40, 0x09, 0x0C, 0x28, 0x2E, 0x40, 0x72, 0x1C, 0x00, 0x82, 0x12, 0x00, 0x00, 0x38, 0x2A, 0x28, 0x26, 0x60, 0x72, 0x24, 0x84, 0x07, 0x0C, 0x28, 0x2E, 0x40, 0x72, 0xFF, 0x00, 0x50, 0x30, 0x28, 0x26, 0x60, 0x72, 0x24, 0x84, 0x07, 0x0C, 0x28, 0x2E, 0x40, 0x72, 0x28, 0x26, 0x60, 0x72, 0x28, 0x2E, 0x40, 0x72, 0x28, 0x36, 0x00, 0x72, 0x78, 0x42, 0x09, 0x0C, 0x03, 0x3A, 0x02, 0x00, 0xB8, 0x0B, 0x42, 0x28, 0x0D, 0x00, 0x40, 0x14, 0x01, 0x00, 0x10, 0x24, 0x28, 0x26, 0x80, 0x72, 0x50, 0x7D, 0x07, 0x0C, 0x28, 0x2E, 0x00, 0x72, 0x04, 0x00, 0x40, 0x50, 0x01, 0x00, 0x10, 0x26, 0x01, 0x00, 0x31, 0x26, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x10, 0x26, 0x0B, 0x00, 0x02, 0x2A, 0xF7, 0xFF, 0x40, 0x14, 0x28, 0x26, 0x80, 0x72, 0x03, 0x00, 0x38, 0x2A, 0x50, 0x00, 0xBF, 0x7B, 0x40, 0x00, 0xB4, 0x7B, 0x30, 0x00, 0xB3, 0x7B, 0x20, 0x00, 0xB2, 0x7B, 0x10, 0x00, 0xB1, 0x7B, 0x00, 0x00, 0xB0, 0x7B, 0x01, 0x00, 0x02, 0x24, 0x25, 0x10, 0x00, 0x03, 0x08, 0x00, 0xE0, 0x03, 0x60, 0x00, 0xBD, 0x27 });

            //nop and changes bones blackhole jump to mflc
            dataAccess.ApplyPatch(bonesPatchLocation, new byte[432] { 0x3C, 0xAC, 0x05, 0x08,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 });
        }

        public override void Remove()
        {
            //Restore MFLC logic
            dataAccess.ApplyPatch(patchLocation, new byte[252] { 0xA0, 0xFF, 0xBD, 0x27, 0x50, 0x00, 0xBF, 0x7F, 0x40, 0x00, 0xB4, 0x7F, 0x30, 0x00, 0xB3, 0x7F, 0x28, 0xA6, 0x80, 0x70, 0x20, 0x00, 0xB2, 0x7F, 0x10, 0x00, 0xB1, 0x7F, 0x03, 0x00, 0x07, 0x24, 0x21, 0x00, 0x08, 0x24, 0x0E, 0x00, 0x09, 0x24, 0x28, 0x26, 0x00, 0x70, 0x28, 0x2E, 0x00, 0x70, 0x28, 0x36, 0x80, 0x72, 0x00, 0x00, 0xB0, 0x7F, 0x90, 0x32, 0x09, 0x0C, 0x28, 0x8E, 0x00, 0x70, 0x28, 0x26, 0x40, 0x70, 0x14, 0x3B, 0x09, 0x0C, 0x28, 0x2E, 0x00, 0x70, 0x03, 0x9A, 0x02, 0x00, 0xFF, 0x00, 0x52, 0x30, 0x28, 0x26, 0x60, 0x72, 0xD8, 0x40, 0x09, 0x0C, 0x28, 0x2E, 0x40, 0x72, 0x1C, 0x00, 0x82, 0x12, 0x03, 0x00, 0x21, 0x2A, 0x28, 0x26, 0x60, 0x72, 0x24, 0x84, 0x07, 0x0C, 0x28, 0x2E, 0x40, 0x72, 0xFF, 0x00, 0x50, 0x30, 0x28, 0x26, 0x60, 0x72, 0x24, 0x84, 0x07, 0x0C, 0x28, 0x2E, 0x40, 0x72, 0x28, 0x26, 0x60, 0x72, 0x28, 0x2E, 0x40, 0x72, 0x28, 0x36, 0x00, 0x72, 0x78, 0x42, 0x09, 0x0C, 0x03, 0x3A, 0x02, 0x00, 0xB8, 0x0B, 0x42, 0x28, 0x0C, 0x00, 0x40, 0x14, 0x01, 0x00, 0x10, 0x24, 0x28, 0x26, 0x80, 0x72, 0x50, 0x7D, 0x07, 0x0C, 0x28, 0x2E, 0x00, 0x72, 0x04, 0x00, 0x40, 0x50, 0x01, 0x00, 0x10, 0x26, 0x01, 0x00, 0x31, 0x26, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x10, 0x26, 0x0B, 0x00, 0x02, 0x2A, 0xF7, 0xFF, 0x40, 0x14, 0x28, 0x26, 0x80, 0x72, 0x03, 0x00, 0x21, 0x2A, 0x50, 0x00, 0xBF, 0x7B, 0x40, 0x00, 0xB4, 0x7B, 0x30, 0x00, 0xB3, 0x7B, 0x20, 0x00, 0xB2, 0x7B, 0x10, 0x00, 0xB1, 0x7B, 0x00, 0x00, 0xB0, 0x7B, 0x01, 0x00, 0x02, 0x24, 0x0A, 0x10, 0x01, 0x00, 0x08, 0x00, 0xE0, 0x03, 0x60, 0x00, 0xBD, 0x27 });
            //Restore bones AI
            dataAccess.ApplyPatch(bonesPatchLocation, new byte[432] { 0x60, 0xFF, 0xBD, 0x27, 0x60, 0x00, 0xBF, 0x7F, 0x50, 0x00, 0xB5, 0x7F, 0x40, 0x00, 0xB4, 0x7F, 0x30, 0x00, 0xB3, 0x7F, 0x20, 0x00, 0xB2, 0x7F, 0x10, 0x00, 0xB1, 0x7F, 0x70, 0x00, 0xB1, 0x27, 0x00, 0x00, 0xB0, 0x7F, 0x28, 0x96, 0x80, 0x70, 0x28, 0x86, 0x00, 0x70, 0x28, 0x26, 0x00, 0x70, 0x28, 0x2E, 0x20, 0x72, 0xFF, 0xFF, 0x03, 0x34, 0x01, 0x00, 0x84, 0x24, 0x00, 0x00, 0xA3, 0xA4, 0x16, 0x00, 0x82, 0x28, 0x02, 0x00, 0xA5, 0x24, 0x00, 0x00, 0x00, 0x00, 0xFA, 0xFF, 0x40, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x24, 0x70, 0x00, 0xA5, 0x27, 0x1D, 0x00, 0x06, 0x24, 0x0B, 0x20, 0x12, 0x00, 0x28, 0x3E, 0x00, 0x70, 0xB0, 0xF0, 0x09, 0x0C, 0x28, 0x46, 0x00, 0x70, 0x94, 0xED, 0x09, 0x0C, 0x70, 0x00, 0xA4, 0x27, 0x28, 0x9E, 0x40, 0x70, 0x28, 0x26, 0x00, 0x70, 0xFF, 0xFF, 0x03, 0x34, 0x01, 0x00, 0x84, 0x24, 0x00, 0x00, 0x23, 0xA6, 0x16, 0x00, 0x82, 0x28, 0x02, 0x00, 0x31, 0x26, 0x00, 0x00, 0x00, 0x00, 0xFA, 0xFF, 0x40, 0x14, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x24, 0x70, 0x00, 0xA5, 0x27, 0x1D, 0x00, 0x06, 0x24, 0x28, 0x26, 0x40, 0x72, 0xB0, 0xF0, 0x09, 0x0C, 0x28, 0x46, 0xE0, 0x70, 0x94, 0xED, 0x09, 0x0C, 0x70, 0x00, 0xA4, 0x27, 0xFF, 0x00, 0x75, 0x32, 0x03, 0x9A, 0x13, 0x00, 0x28, 0xA6, 0x40, 0x70, 0x28, 0x26, 0x60, 0x72, 0x24, 0x84, 0x07, 0x0C, 0x28, 0x2E, 0xA0, 0x72, 0xFF, 0x00, 0x51, 0x30, 0x28, 0x26, 0x60, 0x72, 0x24, 0x84, 0x07, 0x0C, 0x28, 0x2E, 0xA0, 0x72, 0x28, 0x26, 0x60, 0x72, 0x28, 0x2E, 0xA0, 0x72, 0x28, 0x36, 0x20, 0x72, 0x78, 0x42, 0x09, 0x0C, 0x03, 0x3A, 0x02, 0x00, 0xFF, 0x00, 0x95, 0x32, 0x03, 0xA2, 0x14, 0x00, 0x28, 0x9E, 0x40, 0x70, 0x28, 0x26, 0x80, 0x72, 0x24, 0x84, 0x07, 0x0C, 0x28, 0x2E, 0xA0, 0x72, 0xFF, 0x00, 0x51, 0x30, 0x28, 0x26, 0x80, 0x72, 0x24, 0x84, 0x07, 0x0C, 0x28, 0x2E, 0xA0, 0x72, 0x28, 0x26, 0x80, 0x72, 0x28, 0x2E, 0xA0, 0x72, 0x28, 0x36, 0x20, 0x72, 0x78, 0x42, 0x09, 0x0C, 0x03, 0x3A, 0x02, 0x00, 0x2A, 0x08, 0x53, 0x00, 0x0F, 0x00, 0x20, 0x10, 0x00, 0x00, 0x01, 0x2A, 0xB8, 0x0B, 0x62, 0x2A, 0x0B, 0x00, 0x40, 0x14, 0x01, 0x00, 0x11, 0x24, 0x28, 0x26, 0x40, 0x72, 0x50, 0x7D, 0x07, 0x0C, 0x28, 0x2E, 0x20, 0x72, 0x03, 0x00, 0x40, 0x50, 0x01, 0x00, 0x31, 0x26, 0x01, 0x00, 0x10, 0x26, 0x01, 0x00, 0x31, 0x26, 0x0B, 0x00, 0x22, 0x2A, 0xF8, 0xFF, 0x40, 0x14, 0x28, 0x26, 0x40, 0x72, 0x03, 0x00, 0x01, 0x2A, 0x60, 0x00, 0xBF, 0x7B, 0x50, 0x00, 0xB5, 0x7B, 0x40, 0x00, 0xB4, 0x7B, 0x30, 0x00, 0xB3, 0x7B, 0x20, 0x00, 0xB2, 0x7B, 0x10, 0x00, 0xB1, 0x7B, 0x00, 0x00, 0xB0, 0x7B, 0x01, 0x00, 0x02, 0x24, 0x25, 0x10, 0x20, 0x00, 0x08, 0x00, 0xE0, 0x03, 0xA0, 0x00, 0xBD, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 });
        }
    }
}
